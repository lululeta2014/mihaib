<?xml version="1.0"?>

<project name="DiceLottery" default="jar" basedir=".">

	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="build.dir" value="build" />
	<property name="dist.dir" value="dist" />
	<property name="dist.lib" value="${dist.dir}/lib" />
	<property name="doc.dir" value="doc" />

	<!-- JAR file name -->
	<property name="jar.file" value="${dist.dir}/DiceLottery.jar" />

	<!-- Main classes for program and tests -->
	<property name="main.class" value="net.sf.dicelottery.DiceLottery" />
	<property name="main.test.class" value="net.sf.dicelottery.RunTests" />

	<!-- ClassPath -->
	<path id="classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<!-- Target to create build directories before compile target -->
	<target name="prepare">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<!-- Target to clean everything -->
	<target name="clean" depends="test-clean" description="Remove all generated files.">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${doc.dir}" />
	</target>

	<!-- Target to copy icons; when icons/ is missing, succeeds (and does nothing) -->
	<target name="copy-icons">
		<copy todir="${build.dir}">
			<fileset dir=".">
				<include name="icons/*" />
			</fileset>
		</copy>
	</target>

	<!-- Target to compile source code -->
	<target name="compile" depends="prepare, copy-icons" description="Compile source code (build project).">
		<javac srcdir="${src.dir}" encoding="UTF-8"
			destdir="${build.dir}"
			classpathref="classpath"
			includeAntRuntime="false" />
	</target>

	<!-- Target to copy lib/ to dist/lib -->
	<target name="copy-lib" depends="prepare">
		<copy todir="${dist.lib}">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</copy>
	</target>

	<!-- Target to copy configuration files to dist/ -->
	<target name="copy-config-files" depends="prepare">
		<copy todir="${dist.dir}">
			<fileset dir="elem-files" />
		</copy>
	</target>

	<!-- Target to build the jar -->
	<target name="jar" depends="compile, copy-lib, copy-config-files" description="Build the JAR in dist/DiceLottery.jar.">
		<path id="dist.classpath">
			<fileset dir="${dist.lib}" includes="**/*.jar" />
		</path>

		<manifestclasspath property="manifest.classpath" jarfile="${jar.file}">
			<classpath refid="dist.classpath" />
		</manifestclasspath>

		<jar jarfile="${jar.file}">
			<!-- put classes and icons in the jar -->
			<fileset dir="${build.dir}" />
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
				<attribute name="Class-Path" value="${manifest.classpath}" />
			</manifest>
		</jar>
	</target>

	<!-- Target to run the jar -->
	<target name="run" depends="jar" description="Run the program from the built JAR.">
		<java jar="${jar.file}" fork="true" />
	</target>

	<!-- Target to generate Java documentation -->
	<target name="doc" description="Generate javadoc.">
		<javadoc sourcepath="${src.dir}" encoding="UTF-8" destdir="${doc.dir}">
			<classpath refid="classpath" />
		</javadoc>
	</target>

	<!-- Target to clean and then build the jar -->
	<target name="rebuild" depends="clean, jar" description="Cleans, compiles and builds the JAR." />

	<!-- Target to clean and then build the jar and documentation -->
	<target name="rebuild-all" depends="rebuild, doc" description="Cleans, compiles, builds the JAR and generates the documentation." />


	<!-- Test targets -->

	<property name="test.dir" value="test" />
	<property name="test.src.dir" value="${test.dir}/src" />
	<property name="test.lib.dir" value="${test.dir}/lib" />
	<property name="test.build.dir" value="${test.dir}/build" />

	<!-- Test ClassPath -->
	<path id="test-classpath">
		<fileset dir="${test.lib.dir}" includes="**/*.jar" />
		<pathelement location="${jar.file}" />
	</path>

	<!-- Target to create build directory before compile target -->
	<target name="test-prepare">
		<mkdir dir="${test.build.dir}" />
	</target>

	<!-- Target to clean tests -->
	<target name="test-clean" description="Remove generated test files.">
		<delete dir="${test.build.dir}" />
	</target>

	<!-- Target to compile source code -->
	<target name="test-compile" depends="jar, test-prepare" description="Compile source code (build tests).">
		<javac srcdir="${test.src.dir}" encoding="UTF-8"
			destdir="${test.build.dir}"
			classpathref="test-classpath"
			includeAntRuntime="false" />
	</target>

	<!-- Target to run the tests -->
	<target name="test" depends="test-compile" description="Run the tests.">
		<java classname="${main.test.class}"
			fork="true" classpathref="test-classpath">
			<classpath location="${test.build.dir}" />
			<arg value="." />
		</java>
	</target>

</project>
